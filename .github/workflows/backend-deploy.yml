name: Deploy Backend to Cloud Run

env:
  SERVICE_NAME: backend
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  FRONTEND_URL_PROD: ${{ vars.FRONTEND_URL_PROD }}

on:
  push:
    branches:
      - main
    paths:
      - "backend_repo/**"
  workflow_dispatch:

jobs:
  typecheck-and-lint:
    name: Typecheck and Linting
    runs-on: ubuntu-latest
    environment: prod
    defaults:
      run:
        working-directory: "backend_repo"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm" # Cache dependencies installed below

      - name: Install Dependencies
        run: pnpm install

      - name: Lint
        run: pnpm run check:lint

      - name: Typescript Check
        run: npm run ts:check

      - name: Unit Tests
        run: npm run test


  dockerize-and-deploy:
    runs-on: ubuntu-latest
    environment: prod
    needs: [typecheck-and-lint]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Google Cloud Auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Configure Docker
        run: |
          gcloud auth configure-docker

      - name: Build and Push Docker Image
        run: |
          cd backend_repo
          echo $FRONTEND_URL_PROD
          docker build --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} --build-arg FRONTEND_URL_PROD=$FRONTEND_URL_PROD \
           -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.BACKEND_IMAGE_NAME }}:latest ./
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.BACKEND_IMAGE_NAME }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.BACKEND_IMAGE_NAME }}:latest \
            --platform managed \
            --region asia-southeast1 \
            --allow-unauthenticated \
            --port 8080
